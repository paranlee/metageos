version: '3.9'

networks:
  gs-adhoc-network:
    driver: bridge

services:

  # request shader
  scg-wms-request-sharder:
    build: 
      context: .
      dockerfile: Dockerfile
    image: scg-wms-request-sharder:latest
    container_name: scg-wms-request-sharder
    hostname: scg-wms-request-sharder
    # depends_on:
    #   - geoserver-0
    #   - geoserver-1
    #   - geoserver-2
    networks:
      - gs-adhoc-network
    ports:
      - 39010:9010
    restart: on-failure
    # healthcheck:
    #   test: wget --no-verbose --tries=1 --spider http://localhost:9010/ || exit 1
    #   interval: 1m30s
    #   timeout: 10s
    #   retries: 3

  geoserver-0:
    image: kartoza/geoserver:2.19.2
    container_name: geoserver-0
    hostname: geoserver-0
    volumes:
      - ./geoserver-0:/opt/geoserver/data_dir
    networks:
      - gs-adhoc-network
    ports:
      - 8800:8080
    environment:
      - TOMCAT_USER=tomcat
      - TOMCAT_PASSWORD=tomcat
      - GEOSERVER_ADMIN_USER=admin
      - GEOSERVER_ADMIN_PASSWORD=geoserver
    restart: on-failure
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8080/ || exit 1
      interval: 1m30s
      timeout: 10s
      retries: 3

  geoserver-1:
    image: kartoza/geoserver:2.19.2
    container_name: geoserver-1
    hostname: geoserver-1
    volumes:
      - ./geoserver-1:/opt/geoserver/data_dir
    networks:
      - gs-adhoc-network
    ports:
      - 38081:8080
    environment:
      - TOMCAT_USER=tomcat
      - TOMCAT_PASSWORD=tomcat
      - GEOSERVER_ADMIN_USER=admin
      - GEOSERVER_ADMIN_PASSWORD=geoserver
    restart: on-failure
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8080/ || exit 1
      interval: 1m30s
      timeout: 10s
      retries: 3

  geoserver-2:
    image: kartoza/geoserver:2.19.2
    container_name: geoserver-2
    hostname: geoserver-2
    volumes:
      - ./geoserver-2:/opt/geoserver/data_dir
    networks:
      - gs-adhoc-network
    ports:
      - 38082:8080
    environment:
      - TOMCAT_USER=tomcat
      - TOMCAT_PASSWORD=tomcat
      - GEOSERVER_ADMIN_USER=admin
      - GEOSERVER_ADMIN_PASSWORD=geoserver
    restart: on-failure
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8080/ || exit 1
      interval: 1m30s
      timeout: 10s
      retries: 3

# Adhoc PG
  pg-postgis-0:
    build: 
      context: ./pg-postgis
      dockerfile: ./Dockerfile
    image: pg-postgis:latest
    container_name: pg-postgis-0
    privileged: true
    volumes:
      - ./pg-postgis/pg-postgis-0:/var/lib/postgresql
    networks:
      - gs-adhoc-network
    ports:
      - 35000:5432
    restart: always

  pg-postgis-1:
    build: 
      context: ./pg-postgis
      dockerfile: ./Dockerfile
    image: pg-postgis:latest
    container_name: pg-postgis-1
    privileged: true
    volumes:
      - ./pg-postgis/pg-postgis-1:/var/lib/postgresql
    networks:
      - gs-adhoc-network
    ports:
      - 35001:5432
    restart: always

  pg-postgis-2:
    build: 
      context: ./pg-postgis
      dockerfile: ./Dockerfile
    image: pg-postgis:latest
    container_name: pg-postgis-2
    privileged: true
    volumes:
      - ./pg-postgis/pg-postgis-2:/var/lib/postgresql
    networks:
      - gs-adhoc-network
    ports:
      - 35002:5432
    restart: always

  #  db:
  #     image: kartoza/postgis:${POSTGIS_VERSION_TAG}
  #     volumes:
  #        - geo-db-data:/var/lib/postgresql
  #     networks:
  #       - gs-adhoc-network
  #     ports:
  #       - ${POSTGRES_PORT}:5432
  #     environment:
  #       - POSTGRES_DB=${POSTGRES_DB}
  #       - POSTGRES_USER=${POSTGRES_USER}
  #       - POSTGRES_PASS=${POSTGRES_PASS}
  #       - ALLOW_IP_RANGE=${ALLOW_IP_RANGE}
  #       - FORCE_SSL=TRUE
  #     restart: on-failure
  #     healthcheck:
  #       test: "exit 0"